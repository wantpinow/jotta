name: Deploy Preview

on: [pull_request]

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
  NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }}
  NEON_MAIN_BRANCH_NAME: ${{ secrets.NEON_MAIN_BRANCH_NAME }}
  NEON_DATABASE_NAME: ${{ secrets.NEON_DATABASE_NAME }}
  NEON_DATABASE_USERNAME: ${{ secrets.NEON_DATABASE_USERNAME }}
  OAUTH_GITHUB_CLIENT_ID: ${{ secrets.OAUTH_GITHUB_CLIENT_ID }}
  OAUTH_GITHUB_CLIENT_SECRET: ${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}
  OAUTH_GOOGLE_CLIENT_ID: ${{ secrets.OAUTH_GOOGLE_CLIENT_ID }}
  OAUTH_GOOGLE_CLIENT_SECRET: ${{ secrets.OAUTH_GOOGLE_CLIENT_SECRET }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  HOST: ${{ secrets.HOST }}

jobs:
  deploy-preview:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ env.VERCEL_TOKEN }}

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v8

      - name: Create Neon Branch
        id: create-branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ env.NEON_PROJECT_ID }}
          parent: ${{ env.NEON_MAIN_BRANCH_NAME }}
          branch_name: preview/pr-${{ github.event.number }}-${{ steps.branch-name.outputs.current_branch }}
          username: ${{ env.NEON_DATABASE_USERNAME }}
          database: ${{ env.NEON_DATABASE_NAME }}
          api_key: ${{ env.NEON_API_KEY }}

      - name: Prepare $GITHUB_ENV
        run: |
          echo DATABASE_URL=${{ steps.create-branch.outputs.db_url_with_pooler }}?sslmode=require >> $GITHUB_ENV
          echo DIRECT_URL=${{ steps.create-branch.outputs.db_url }}?sslmode=require >> $GITHUB_ENV

      - name: Run Drizzle Migration
        run: |
          bun run --env-file=$GITHUB_ENV db:migrate

      - name: Build and Deploy to Vercel
        id: deploy
        run: |
          set -e  # Exit immediately if any command returns a non-zero status

          # Create .env.local file
          touch .env.local
          echo DATABASE_URL=${{ env.DATABASE_URL }} >> .env.local
          echo OAUTH_GITHUB_CLIENT_ID=${{ env.OAUTH_GITHUB_CLIENT_ID }} >> .env.local
          echo OAUTH_GITHUB_CLIENT_SECRET=${{ env.OAUTH_GITHUB_CLIENT_SECRET }} >> .env.local
          echo OAUTH_GOOGLE_CLIENT_ID=${{ env.OAUTH_GOOGLE_CLIENT_ID }} >> .env.local
          echo OAUTH_GOOGLE_CLIENT_SECRET=${{ env.OAUTH_GOOGLE_CLIENT_SECRET }} >> .env.local
          echo OPENAI_API_KEY=${{ env.OPENAI_API_KEY }} >> .env.local
          echo HOST=${{ env.HOST }} >> .env.local

          # Deploy to Vercel
          preview_url=$(eval "vercel deploy --token=${{ env.VERCEL_TOKEN }} $(grep -v '^#' .env.local | grep '=' | awk '{print "-e " $0 " -b " $0}' | tr '\n' ' ')")
          if [ $? -eq 0 ]; then
            echo "preview_url=${preview_url}" >> $GITHUB_OUTPUT
          else
            echo "Vercel deploy failed"
            exit 1
          fi

      - name: Comment on Pull Request
        uses: thollander/actions-comment-pull-request@v2
        with:
          GITHUB_TOKEN: ${{ env.GH_TOKEN }}
          message: |
            Vercel Preview URL :rocket: : ${{ steps.deploy.outputs.preview_url }}
            Neon branch :elephant: : https://console.neon.tech/app/projects/${{ env.NEON_PROJECT_ID }}/branches/${{ steps.create-branch.outputs.branch_id }}
